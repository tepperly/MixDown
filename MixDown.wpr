#!wing
#!version=4.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('md'),
                        'excludes': (),
                        'filter': 'Python Files',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True},
                       {'dirloc': loc('.'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': False,
                        'watch_for_changes': True}]
proj.file-list = [loc('MixDown')]
proj.file-type = 'normal'
proj.main-file = loc('MixDown')
[user attributes]
cache.last-mime-type = {loc('mdConfigure.py'): 'text/x-python',
                        loc('unknown:<untitled> #3'): 'text/plain'}
debug.breakpoints = {loc('mdImporter.py'): {81: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('MixDown'): {},
                    loc('MixDown.py'): {}}
debug.recent-run-args = {loc('MixDown'): ['TestCaseA.md -ptestPrefix',
        'sundialsCMake.md -ptestPrefixCmake',
        'sundialsCMake.md -ptestPrefixCmake -f',
        'sundialsAutotools.md -ptestPrefixAutotools',
        'sundialsCMake.md -ptestPrefixCMake',
        'TestCaseA.md -ptestPrefix -v',
        '--clean TestCaseA.md -v',
        '--import TestCaseA TestCaseB TestCaseC TestCaseD',
        'TestCaseA.md -v -ptestCaseOut',
        '--profile -d/home/white238/bin,/usr/local/bin,/usr/bin',
        '--profile -d/home/white238/bin',
        '--profile',
        '--profile -rnexttest',
        '--profile -dtest -rnexttest',
        '--profile -dtest',
        '--profile -d/foo/non,/bar/non -r/foo/re,/bar/re',
        '--clean',
        '--clean subversion-1.6.12.md',
        ' subversion-1.6.12.md -sapr:preconfig -',
        ' subversion-1.6.12.md -sapr:preconfig',
        'main.md -ptestPrefix -v',
        '--import main hello1/',
        'main.md -ptestPrefix',
        '--import main hello1',
        ' subversion-1.6.12.md -ptestPrefix -sapr:preconfig',
        'pymol-v-1.4.1.md -ptestPrefix',
        '--import http://sourceforge.net/projects/pymol/files/pymol/1.4.1/py'\
        'mol-v1.4.1.tar.bz2/download',
        '-s',
        ' subversion-1.6.12.md -ptestPrefix',
        '--import /tmp/mixdown-nLC2i1/mdDownload/apr-1.3.12.tar.bz2'],
                         loc('MixDown.py'): [' -v -cb -p/usr/local test.md',
        ' -cb -v -ptempPrefix subversion-1.6.12.md',
        ' -cb -v -p/usr/ subversion-1.6.12.md',
        ' -cb -v subversion-1.6.12.md',
        '-j4 -v -cb subversion-1.6.12.md',
        '-ptempPrefix -j4 -v -cb subversion-1.6.12.md',
        '-p/home/white238/Project/temp/prefix -v -cb subversion-1.6.12.md',
        '-p/home/white238 -v -cb subversion-1.6.12.md']}
debug.run-args = {loc('MixDown'): 'TestCaseA.md -ptestPrefix',
                  loc('MixDown.py'): ' -v -cb -p/usr/local test.md'}
debug.var-col-widths = [0.56380952380952376,
                        0.43619047619047618]
edit.file-encoding = {loc('PreConfigure.py'): 'UTF-8',
                      loc('configure.py'): 'UTF-8',
                      loc('inTargets/foo.md'): 'UTF-8',
                      loc('mdAutoConf.py'): 'UTF-8',
                      loc('mdCommand.py'): 'UTF-8',
                      loc('mdFileLogger'): 'UTF-8',
                      loc('mdLoggerHtml'): 'UTF-8',
                      loc('mdMake'): 'UTF-8',
                      loc('mdSubversion'): 'UTF-8',
                      loc('preConfigure.py'): 'UTF-8',
                      loc('projectFile.py'): 'UTF-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': '1NzxAmeZSdAq09odAFpxwqFLpH'\
        '2sTaXh',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2931034482758621,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(0,)],
                                 'selected-nodes': [(0,
        17)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'column-w'\
        'idths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('debug-data',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.3264746227709191,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {'tree-state': []}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.hg',
                      'wide',
                      0,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.80000000000000004,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 27,
                       'folded-linenos': [],
                       'history': {None: ['os.environ["Path"]\n',
        'os.environ["PATH"]\n',
        'l = list()\n',
        'l.append("temp")\n',
        'l.append("first")\n',
        'l.append("second")\n',
        'l.remove("second")\n',
        'l\n',
        'os.path.abspath("..")\n',
        '".:/home/white238/bin:/home/white238/bin/Python-2.7/bin:/home/white'\
        '238/opt/Adobe/Reader9/bin:/usr/lib64/qt-3.3/bin:/usr/kerberos/bin:/'\
        'usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin".split(":")\n',
        '".:/home/white238/bin:/home/white238/bin/Python-2.7/bin:/home/white'\
        '238/opt/Adobe/Reader9/bin:/usr/lib64/qt-3.3/bin:/usr/kerberos/bin:/'\
        'usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin".split(":").join(" ")\n',
        't = "-v"\n',
        'print t[1:]\n',
        't = ("a", "b", "c")\n',
        't[1]\n',
        'from md import overrides\n',
        'class OverrideGroup(object):\n    def __init__(self):\n        self'\
        '.compiler = ""\n        self.optimization = ""\n        self.parall'\
        'el = ""\n        self.overrides = dict()\n        self.defines = de'\
        'fines.Defines()\n\n    def count(self):\n        return len(self.ov'\
        'errides) + len(self.defines.keys())\n\n    def combine(self, child)'\
        ':\n        self.compiler = child.compiler\n        self.optimizatio'\
        'n = child.optimization\n        self.parallel = child.parallel\n   '\
        '     for override in child.overrides:\n            self.overrides[o'\
        'verride] = child.overrides[override]\n        for key in child.defi'\
        'nes:\n            self.defines.set(key, child.defines.get(key))\n\n'\
        '    def __contains__(self, key):\n        return defines.normalizeK'\
        'ey(key) in self.overrides\n\n    def get(self, key):\n        norma'\
        'lizedKey = defines.normalizeKey(key)\n        if normalizedKey in s'\
        'elf.overrides:\n            return self.overrides[normalizedKey]\n '\
        '       else:\n            return None\n\n    def set(self, key, val'\
        'ue):\n        self.overrides[defines.normalizeKey(key)] = value\n\n'\
        '\n',
        'o = OverrideGroup()\n',
        'class Defines(object):\n    def __init__(self):\n        self._defi'\
        'nes = dict()\n\n    def __contains__(self, key):\n        return ke'\
        'y in self._defines\n\n    def keys(self):\n        return self._def'\
        'ines.keys()\n\n    def set(self, key, value):\n        self._define'\
        's[normalizeKey(key)] = value.strip()\n\n    def get(self, key):\n  '\
        '      normalizedKey = normalizeKey(key)\n        strippedKey = norm'\
        'alizeKey(key, False)\n        if normalizedKey in self._defines:\n '\
        '           value = self._defines[normalizedKey]\n        elif strip'\
        'pedKey in os.environ:\n            value = os.environ[strippedKey]\n'\
        '        else:\n            value = ""\n        return value\n\n',
        'd.set("a", "b")\n',
        '"a" in d\n',
        'class Defines(object):\n    def __init__(self):\n        self._defi'\
        'nes = dict()\n\n    def __contains__(self, key):\n        return ke'\
        'y in self._defines\n\n    def keys(self):\n        return self._def'\
        'ines.keys()\n\n    def __setitem__(self, key, value):\n        self'\
        '._defines[normalizeKey(key)] = value.strip()\n\n    def set(self, k'\
        'ey, value):\n        self._defines[normalizeKey(key)] = value.strip'\
        '()\n\n    def get(self, key):\n        normalizedKey = normalizeKey'\
        '(key)\n        strippedKey = normalizeKey(key, False)\n        if n'\
        'ormalizedKey in self._defines:\n            value = self._defines[n'\
        'ormalizedKey]\n        elif strippedKey in os.environ:\n           '\
        ' value = os.environ[strippedKey]\n        else:\n            value '\
        '= ""\n        return value\n\n',
        'def normalizeKey(key, lower=True):\n    normalizedKey = key.strip()'\
        '\n    if lower:\n        normalizedKey = normalizedKey.lower()\n   '\
        ' if normalizedKey.startswith("$(") and normalizedKey.endswith(")"):'\
        '\n        normalizedKey = normalizedKey[2:]\n        normalizedKey '\
        '= normalizedKey[:-1]\n        normalizedKey = normalizedKey.strip()'\
        '\n    return normalizedKey\n\n',
        'd.set("a","b")\n',
        'd.get("a")\n',
        'd["c"] = "d"\n',
        'd.get["c"]\n',
        'class Defines(dict):\n    def __contains__(self, key):\n        ret'\
        'urn normalizeKey(key) in self._defines\n\n    def __setitem__(self,'\
        ' key, value):\n        super(Defines, self).__setitem__(normalizeKe'\
        'y(key), value.strip())\n\n    def __getitem__(self, key):\n        '\
        'return super(Defines, self).__getitem__(normalizeKey(key))\n\n\n',
        'd = Defines()\n',
        'd["cCc"] = "ddd"\n',
        'd["ccc"]\n',
        'os.environ["home"]\n',
        'os.environ["HOME"]\n',
        'exit\n',
        'import glob\n',
        'def findFiles(dirs, fileNameWildCard, recursive=True):\n    files ='\
        ' []\n    for d in dirs:\n        files.append(glob.glob(d + fileNam'\
        'eWildCard))\n    return files\n\n',
        'findFiles(["/home/white238/projects/MixDown/"], "MixDown")\n',
        'findFiles(["/home/white238/projects/MixDown/"], "Mix*")\n',
        'import Queue\n',
        'def findExecutables(dirs, exeWildCards, recursive=True):\n    execu'\
        'tables = []\n    q = Queue.Queue()\n    for d in dirs:\n        q.p'\
        'ut(d)\n    while not q.empty():\n        for name in os.listdir(d):'\
        '\n            fullPath = os.path.join(d, name)\n            if os.p'\
        'ath.isdir(fullPath) and recursive:\n                q.put(fullPath)'\
        '\n            else:\n                if fnmatch.fnmatch(name, exeWi'\
        'ldCard) and os.access(fullPath, os.X_OK):\n                    exec'\
        'utables.append(fullPath)\n    return executables\n\n',
        'import fnmatch, options, os, Queue\ndef findExecutables(dirs, exeWi'\
        'ldCards, recursive=True):\n    executables = []\n    q = Queue.Queu'\
        'e()\n    for d in dirs:\n        q.put(d)\n    while not q.empty():'\
        '\n        for name in os.listdir(d):\n            fullPath = os.pat'\
        'h.join(d, name)\n            if os.path.isdir(fullPath) and recursi'\
        've:\n                q.put(fullPath)\n            else:\n          '\
        '      if fnmatch.fnmatch(name, exeWildCard) and os.access(fullPath,'\
        ' os.X_OK):\n                    executables.append(fullPath)\n    r'\
        'eturn executables\n\n',
        'import fnmatch, os, Queue\ndef findExecutables(dirs, exeWildCards, '\
        'recursive=True):\n    executables = []\n    q = Queue.Queue()\n    '\
        'for d in dirs:\n        q.put(d)\n    while not q.empty():\n       '\
        ' for name in os.listdir(d):\n            fullPath = os.path.join(d,'\
        ' name)\n            if os.path.isdir(fullPath) and recursive:\n    '\
        '            q.put(fullPath)\n            else:\n                if '\
        'fnmatch.fnmatch(name, exeWildCard) and os.access(fullPath, os.X_OK)'\
        ':\n                    executables.append(fullPath)\n    return exe'\
        'cutables\n\n',
        'findExecutables(["/home/white238"], "Mix*")\n',
        'import fnmatch, os, Queue\n',
        'def findExecutables(dirs, exeWildCards, recursive=True):\n    execu'\
        'tables = []\n    q = Queue.Queue()\n    for d in dirs:\n        q.p'\
        'ut(d)\n    while not q.empty():\n        for name in os.listdir(d):'\
        '\n            fullPath = os.path.join(d, name)\n            if os.p'\
        'ath.isdir(fullPath) and recursive:\n                q.put(fullPath)'\
        '\n            else:\n                if fnmatch.fnmatch(name, exeWi'\
        'ldCards) and os.access(fullPath, os.X_OK):\n                    exe'\
        'cutables.append(fullPath)\n    return executables\n\n',
        'findExecutables(["/home/white238/projects/MixDown"], "Mix*)\n',
        'findExecutables(["/home/white238/projects/MixDown"], "Mix*")\n',
        'import re\n',
        "re.match(r'[\\w-]+$', \"test\")\n",
        "if re.match(r'[\\w-]+$', \"test\"):\nprint True\nelse:\nprint False"\
        "\n\n",
        "if re.match(r'[\\w-]+$', \"test\"):\n\tprint True\nelse:\n\tprint F"\
        "alse\n\n",
        "if re.match(r'[\\w-]+$', \"te1234st\"):\n\tprint True\nelse:\n\tpri"\
        "nt False\n\n",
        "if re.match(r'[\\w-]+$', \"tes+++t\"):\n\tprint True\nelse:\n\tprin"\
        "t False\n\n",
        "if re.match(r'[\\w-]+$', \"tes+  ++t\"):\n\tprint True\nelse:\n\tpr"\
        "int False\n\n",
        ".match(r'[\\w-]+$', \"tes   t\"):\n\tprint True\nelse:\n\tprint Fal"\
        "se\n\n",
        "if re.match(r'[\\w-]+$', \"tes   t\"):\n\tprint True\nelse:\n\tprin"\
        "t False\n\n",
        "if re.match(r'[\\w-]+$', \"tes.t\"):\n\tprint True\nelse:\n\tprint "\
        "False\n\n",
        "if re.match(r'[\\w-\\.]+$', \"tes.t\"):\n\tprint True\nelse:\n\tpri"\
        "nt False\n\n",
        "if re.match(r'[\\w\\.+_\\-]+$', \"tes.t\"):\n\tprint True\nelse:\n\t"\
        "print False\n\n",
        'print str(True)\n',
        'print "lalala"+str(True)+"bababa"\n',
        'bool("True")\n',
        'if bool("True"):\n\tprint "yay"\n\n',
        'if bool("true"):\n\tprint "yay"\n\n',
        "l = ['1', '2']\n",
        "str.join(l, ':')\n",
        "':'.join(l)\n",
        'import os\n',
        "os.chmod('/tmp/test', 777)\n",
        "os.chmod('/tmp/test', 0777)\n",
        'try:\n\treturn True\nfinally:\n\tprint "works"\n\n',
        'def test:try:\n\treturn True\nfinally:\n\tprint "works"\n\n',
        'def test:\n\ttry:\n\t\treturn True\n\tfinally:\n\t\tprint "works"\n'\
        '\n',
        'def test():\n\ttry:\n\t\treturn True\n\tfinally:\n\t\tprint "works"'\
        '\n\n',
        'test()\n']},
                       'sel-line': 40,
                       'sel-line-start': 880,
                       'selection_end': 884,
                       'selection_start': 884}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'.restartPath',
                                       'fReverse': False,
                                       'fSearchText': u'origPath',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'.restartPath',
                                       'fReverse': False,
                                       'fSearchText': u'.origPath',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': '',
                       'recent-filters': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('symbolic',
        ['self',
         'skipSteps <0x180c04e0>']),
                                       ('symbolic',
        ['target',
         'pythonCallInfo',
         'path']),
                                       ('symbolic',
        ['target',
         'path']),
                                       ('symbolic',
        ['options',
         'downloadDir'])],
                       'tree-state': {'column-widths': [0.55306427503736921,
        0.44693572496263079],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('MixDown'),
        {'attrib-starts': [('main',
                            28)],
         'first-line': 69,
         'folded-linenos': [],
         'sel-line': 78,
         'sel-line-start': 3407,
         'selection_end': 3431,
         'selection_start': 3431},
        1343434646.0690911),
        (loc('md/python.py'),
         {'attrib-starts': [('callPythonCommand',
                             55)],
          'first-line': 57,
          'folded-linenos': [],
          'sel-line': 78,
          'sel-line-start': 2800,
          'selection_end': 2800,
          'selection_start': 2800},
         1343434790.3433299),
        (loc('md/project.py'),
         {'attrib-starts': [('Project',
                             25),
                            ('Project.readStatusLog',
                             111)],
          'first-line': 125,
          'folded-linenos': [],
          'sel-line': 174,
          'sel-line-start': 7594,
          'selection_end': 7623,
          'selection_start': 7623},
         1343434791.1988349),
        (loc('MixDown'),
         {'attrib-starts': [('main',
                             28)],
          'first-line': 61,
          'folded-linenos': [],
          'sel-line': 78,
          'sel-line-start': 3402,
          'selection_end': 3519,
          'selection_start': 3519},
         1343434808.7751341),
        (loc('MixDown'),
         {'attrib-starts': [('main',
                             28)],
          'first-line': 61,
          'folded-linenos': [],
          'sel-line': 70,
          'sel-line-start': 3013,
          'selection_end': 3013,
          'selection_start': 3013},
         1343435049.3492839),
        (loc('MixDown'),
         {'attrib-starts': [('main',
                             28)],
          'first-line': 61,
          'folded-linenos': [],
          'sel-line': 74,
          'sel-line-start': 3138,
          'selection_end': 3138,
          'selection_start': 3138},
         1343435052.3396201),
        (loc('MixDown'),
         {'attrib-starts': [('main',
                             28)],
          'first-line': 63,
          'folded-linenos': [],
          'sel-line': 89,
          'sel-line-start': 4008,
          'selection_end': 4008,
          'selection_start': 4008},
         1343435059.8363171),
        (loc('md/commands.py'),
         {'attrib-starts': [('buildTarget',
                             108)],
          'first-line': 93,
          'folded-linenos': [],
          'sel-line': 117,
          'sel-line-start': 4147,
          'selection_end': 4147,
          'selection_start': 4147},
         1343435067.3310699),
        (loc('md/commands.py'),
         {'attrib-starts': [('buildStepActor',
                             34)],
          'first-line': 59,
          'folded-linenos': [],
          'sel-line': 64,
          'sel-line-start': 2395,
          'selection_end': 2395,
          'selection_start': 2395},
         1343435069.3254941),
        (loc('md/python.py'),
         {'attrib-starts': [('callPythonCommand',
                             55)],
          'first-line': 57,
          'folded-linenos': [],
          'sel-line': 78,
          'sel-line-start': 2800,
          'selection_end': 2800,
          'selection_start': 2800},
         1343435071.34658),
        (loc('md/steps.py'),
         {'attrib-starts': [('fetch',
                             25)],
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 26,
          'sel-line-start': 1126,
          'selection_end': 1126,
          'selection_start': 1126},
         1343435079.3397911),
        (loc('md/steps.py'),
         {'attrib-starts': [('fetch',
                             25)],
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 32,
          'sel-line-start': 1514,
          'selection_end': 1514,
          'selection_start': 1514},
         1343435083.827369),
        (loc('md/steps.py'),
         {'attrib-starts': [('fetch',
                             25)],
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 38,
          'sel-line-start': 1899,
          'selection_end': 1899,
          'selection_start': 1899},
         1343435084.8264461),
        (loc('md/steps.py'),
         {'attrib-starts': [('fetch',
                             25)],
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 44,
          'sel-line-start': 2289,
          'selection_end': 2289,
          'selection_start': 2289},
         1343435085.3253319),
        (loc('md/steps.py'),
         {'attrib-starts': [('fetch',
                             25)],
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 51,
          'sel-line-start': 2739,
          'selection_end': 2739,
          'selection_start': 2739},
         1343435087.821846),
        (loc('md/steps.py'),
         {'attrib-starts': [('fetch',
                             25)],
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 52,
          'sel-line-start': 2791,
          'selection_end': 2791,
          'selection_start': 2791},
         1343435088.821022),
        (loc('md/steps.py'),
         {'attrib-starts': [('fetch',
                             25)],
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 55,
          'sel-line-start': 3006,
          'selection_end': 3006,
          'selection_start': 3006},
         1343435090.3193209),
        (loc('md/steps.py'),
         {'attrib-starts': [('fetch',
                             25)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 59,
          'sel-line-start': 3136,
          'selection_end': 3136,
          'selection_start': 3136},
         1343435096.813993),
        (loc('md/steps.py'),
         {'attrib-starts': [('fetch',
                             25)],
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 26,
          'sel-line-start': 1126,
          'selection_end': 1126,
          'selection_start': 1126},
         1343435101.8104701),
        [loc('md/project.py'),
         {'attrib-starts': [('Project',
                             25),
                            ('Project.readStatusLog',
                             111)],
          'first-line': 125,
          'folded-linenos': [],
          'sel-line': 175,
          'sel-line-start': 7571,
          'selection_end': 7623,
          'selection_start': 7623},
         1348692873.9381249]],
        19),
        'current-loc': loc('md/project.py'),
        'editor-states': {loc('../../lib/wingide4.0/resources/doc/en/TOC.idx'): {''\
        'displayed-index': 0,
        'viewer-state': {'history': [-1,
                                     0],
                         'history-pos': 1,
                         'index': 0,
                         'top': (0,
                                 0)}},
                          loc('MixDown'): {'attrib-starts': [('main',
        28)],
        'first-line': 63,
        'folded-linenos': [],
        'sel-line': 89,
        'sel-line-start': 4008,
        'selection_end': 4008,
        'selection_start': 4008},
                          loc('md/autoTools.py'): {'attrib-starts': [('getCo'\
        'nfigureCommand',
        107)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 110,
        'sel-line-start': 4192,
        'selection_end': 4259,
        'selection_start': 4259},
                          loc('md/cmake.py'): {'attrib-starts': [('getConfig'\
        'ureCommand',
        117)],
        'first-line': 67,
        'folded-linenos': [],
        'sel-line': 120,
        'sel-line-start': 4860,
        'selection_end': 5006,
        'selection_start': 5000},
                          loc('md/commands.py'): {'attrib-starts': [('buildS'\
        'tepActor',
        34)],
        'first-line': 59,
        'folded-linenos': [],
        'sel-line': 64,
        'sel-line-start': 2395,
        'selection_end': 2395,
        'selection_start': 2395},
                          loc('md/cvs.py'): {'attrib-starts': [],
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 1021,
        'selection_end': 1021,
        'selection_start': 1021},
                          loc('md/defines.py'): {'attrib-starts': [('setPref'\
        'ixDefines',
        346)],
        'first-line': 151,
        'folded-linenos': [],
        'sel-line': 350,
        'sel-line-start': 15895,
        'selection_end': 15895,
        'selection_start': 15895},
                          loc('md/git.py'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 1021,
        'selection_end': 1021,
        'selection_start': 1021},
                          loc('md/hg.py'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 1021,
        'selection_end': 1021,
        'selection_start': 1021},
                          loc('md/importer.py'): {'attrib-starts': [('import'\
        'Targets',
        25)],
        'first-line': 104,
        'folded-linenos': [],
        'sel-line': 131,
        'sel-line-start': 7111,
        'selection_end': 7160,
        'selection_start': 7151},
                          loc('md/logger.py'): {'attrib-starts': [('LoggerBa'\
        'se',
        80),
        ('LoggerBase.reportSuccess',
         106)],
        'first-line': 79,
        'folded-linenos': [],
        'sel-line': 106,
        'sel-line-start': 3748,
        'selection_end': 3769,
        'selection_start': 3762},
                          loc('md/loggerConsole.py'): {'attrib-starts': [('L'\
        'oggerConsole',
        25),
        ('LoggerConsole.reportSuccess',
         64)],
        'first-line': 48,
        'folded-linenos': [],
        'sel-line': 66,
        'sel-line-start': 2877,
        'selection_end': 2919,
        'selection_start': 2912},
                          loc('md/loggerFile.py'): {'attrib-starts': [('Logg'\
        'erFile',
        25),
        ('LoggerFile.reportSuccess',
         98)],
        'first-line': 82,
        'folded-linenos': [],
        'sel-line': 100,
        'sel-line-start': 4319,
        'selection_end': 4363,
        'selection_start': 4363},
                          loc('md/loggerHtml.py'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 1022,
        'selection_end': 1022,
        'selection_start': 1022},
                          loc('md/make.py'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 1021,
        'selection_end': 1021,
        'selection_start': 1021},
                          loc('md/options.py'): {'attrib-starts': [('Options',
        25),
        ('Options.printUsage',
         338)],
        'first-line': 62,
        'folded-linenos': [],
        'sel-line': 375,
        'sel-line-start': 15793,
        'selection_end': 15869,
        'selection_start': 15869},
                          loc('md/overrides.py'): {'attrib-starts': [],
        'first-line': 198,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1576,
        'selection_end': 1602,
        'selection_start': 1602},
                          loc('md/profiler.py'): {'attrib-starts': [('addInt'\
        'elOptimizationGroup',
        199)],
        'first-line': 199,
        'folded-linenos': [],
        'sel-line': 225,
        'sel-line-start': 9465,
        'selection_end': 9513,
        'selection_start': 9513},
                          loc('md/project.py'): {'attrib-starts': [('Project',
        25),
        ('Project.__assignDepthToTargetList',
         415)],
        'first-line': 401,
        'folded-linenos': [],
        'sel-line': 429,
        'sel-line-start': 20694,
        'selection_end': 20694,
        'selection_start': 20694},
                          loc('md/python.py'): {'attrib-starts': [('callPyth'\
        'onCommand',
        55)],
        'first-line': 57,
        'folded-linenos': [],
        'sel-line': 78,
        'sel-line-start': 2800,
        'selection_end': 2800,
        'selection_start': 2800},
                          loc('md/steps.py'): {'attrib-starts': [('fetch',
        25)],
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 1126,
        'selection_end': 1126,
        'selection_start': 1126},
                          loc('md/svn.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 1021,
        'selection_end': 1021,
        'selection_start': 1021},
                          loc('md/target.py'): {'attrib-starts': [('Target',
        62),
        ('Target.__init__',
         63)],
        'first-line': 62,
        'folded-linenos': [],
        'sel-line': 67,
        'sel-line-start': 2602,
        'selection_end': 2623,
        'selection_start': 2614},
                          loc('md/tokenizer.py'): {'attrib-starts': [],
        'first-line': 79,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('md/utilityFunctions.py'): {'attrib-starts': [(''\
        'executeSubProcess',
        54)],
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 62,
        'sel-line-start': 2887,
        'selection_end': 2887,
        'selection_start': 2887}},
        'has-focus': True},
                               'open_files': [u'../../lib/wingide4.0/resources/doc/en/TOC.idx',
        u'MixDown',
        u'md/autoTools.py',
        u'md/cmake.py',
        u'md/commands.py',
        u'md/cvs.py',
        u'md/defines.py',
        u'md/git.py',
        u'md/hg.py',
        u'md/importer.py',
        u'md/logger.py',
        u'md/loggerConsole.py',
        u'md/loggerFile.py',
        u'md/loggerHtml.py',
        u'md/make.py',
        u'md/options.py',
        u'md/overrides.py',
        u'md/profiler.py',
        u'md/python.py',
        u'md/svn.py',
        u'md/target.py',
        u'md/tokenizer.py',
        u'md/utilityFunctions.py',
        u'md/steps.py',
        u'md/project.py']},
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.70571151984511138},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (291,
                         43,
                         1537,
                         919)}]}
guimgr.recent-documents = [loc('md/project.py'),
                           loc('md/steps.py'),
                           loc('md/utilityFunctions.py')]
guimgr.visual-state = {loc('../../../bin/Python-2.7/lib/python2.7/os.py'): {''\
        'attrib-starts': [('makedirs',
                           135)],
        'first-line': 129,
        'folded-linenos': [],
        'sel-line': 156,
        'sel-line-start': 4254,
        'selection_end': 4254,
        'selection_start': 4254},
                       loc('../../../bin/Python-2.7/lib/python2.7/shutil.py'): {''\
        'attrib-starts': [('move',
                           260)],
        'first-line': 254,
        'folded-linenos': [],
        'sel-line': 278,
        'sel-line-start': 8838,
        'selection_end': 8864,
        'selection_start': 8864},
                       loc('../../../bin/Python-2.7/lib/python2.7/subprocess.py'): {''\
        'attrib-starts': [('Popen',
                           610),
                          ('Popen._execute_child',
                           831)],
        'first-line': 1173,
        'folded-linenos': [],
        'sel-line': 1200,
        'sel-line-start': 43313,
        'selection_end': 43313,
        'selection_start': 43313},
                       loc('../../bin/Python-2.7/Lib/shutil.py'): {'attrib-s'\
        'tarts': [('move',
                   260)],
        'first-line': 258,
        'folded-linenos': [],
        'sel-line': 277,
        'sel-line-start': 8819,
        'selection_end': 8819,
        'selection_start': 8819},
                       loc('../../bin/Python-2.7/lib/python2.7/os.py'): {'at'\
        'trib-starts': [('makedirs',
                         135)],
        'first-line': 129,
        'folded-linenos': [],
        'sel-line': 156,
        'sel-line-start': 4254,
        'selection_end': 4254,
        'selection_start': 4254},
                       loc('../../bin/Python-2.7/lib/python2.7/shutil.py'): {''\
        'attrib-starts': [],
        'first-line': 235,
        'folded-linenos': [],
        'sel-line': 256,
        'sel-line-start': 7917,
        'selection_end': 7950,
        'selection_start': 7950},
                       loc('../../bin/Python-2.7/lib/python2.7/subprocess.py'): {''\
        'attrib-starts': [('Popen',
                           610),
                          ('Popen._execute_child',
                           831)],
        'first-line': 1183,
        'folded-linenos': [],
        'sel-line': 1200,
        'sel-line-start': 43313,
        'selection_end': 43313,
        'selection_start': 43313},
                       loc('../../bin/Python-2.7/lib/python2.7/urllib.py'): {''\
        'attrib-starts': [('URLopener',
                           112),
                          ('URLopener.retrieve',
                           221)],
        'first-line': 248,
        'folded-linenos': [],
        'sel-line': 275,
        'sel-line-start': 10086,
        'selection_end': 10086,
        'selection_start': 10086},
                       loc('../../bin/Python2.7/lib/python2.7/shutil.py'): {''\
        'attrib-starts': [('move',
                           260)],
        'first-line': 262,
        'folded-linenos': [],
        'sel-line': 274,
        'sel-line-start': 8761,
        'selection_end': 8805,
        'selection_start': 8805},
                       loc('../../bin/Python2.7/lib/python2.7/socket.py'): {''\
        'attrib-starts': [('_fileobject',
                           232),
                          ('_fileobject.readline',
                           403)],
        'first-line': 439,
        'folded-linenos': [],
        'sel-line': 454,
        'sel-line-start': 16272,
        'selection_end': 16272,
        'selection_start': 16272},
                       loc('../../lib/python2.7/fnmatch.py'): {'attrib-start'\
        's': [('fnmatchcase',
               66)],
        'first-line': 46,
        'folded-linenos': [],
        'sel-line': 73,
        'sel-line-start': 2039,
        'selection_end': 2039,
        'selection_start': 2039},
                       loc('../../lib/python2.7/subprocess.py'): {'attrib-st'\
        'arts': [('Popen',
                  617),
                 ('Popen._execute_child',
                  1095)],
        'first-line': 1200,
        'folded-linenos': [],
        'sel-line': 1227,
        'sel-line-start': 44598,
        'selection_end': 44598,
        'selection_start': 44598},
                       loc('LICENSE'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 959,
        'selection_end': 996,
        'selection_start': 990},
                       loc('MixDown.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('MixDownImporter.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('mdBuild.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 28,
        'selection_end': 28,
        'selection_start': 28},
                       loc('mdConfigure.py'): {'attrib-starts': [('getConfig'\
        'ureCommand',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 76,
        'selection_end': 679,
        'selection_start': 76},
                       loc('mdFileLogger.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('mdInstall.py'): {'attrib-starts': [('getInstallC'\
        'ommand',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 76,
        'selection_end': 567,
        'selection_start': 76},
                       loc('mdLogger.py'): {'attrib-starts': [('Logger',
        0)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 14,
        'selection_end': 18,
        'selection_start': 18},
                       loc('mdLoggerConsole.py'): {'attrib-starts': [('Logge'\
        'rConsole',
        24),
        ('LoggerConsole.getErrorFd',
         69)],
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 70,
        'sel-line-start': 2962,
        'selection_end': 2987,
        'selection_start': 2987},
                       loc('mdLoggerHtml.py'): {'attrib-starts': [('LoggerHt'\
        'ml',
        24),
        ('LoggerHtml.getErrorFd',
         68)],
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 69,
        'sel-line-start': 2622,
        'selection_end': 2647,
        'selection_start': 2647},
                       loc('mdPreConfigure.py'): {'attrib-starts': [('getPre'\
        'ConfigureCommand',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 76,
        'selection_end': 438,
        'selection_start': 76},
                       loc('networkx/networkx/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('project.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('target.py'): {'attrib-starts': [('Target',
        5),
        ('Target.setDependsOn',
         83)],
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 84,
        'sel-line-start': 3230,
        'selection_end': 3260,
        'selection_start': 3260},
                       loc('utilityFunctions.py'): {'attrib-starts': [('pret'\
        'tyPrintList',
        61)],
        'first-line': 53,
        'folded-linenos': [],
        'sel-line': 64,
        'sel-line-start': 2329,
        'selection_end': 2349,
        'selection_start': 2349},
                       loc('../../../../usr/lib64/python2.4/os.py'): {'attri'\
        'b-starts': [('makedirs',
                      142)],
        'first-line': 127,
        'folded-linenos': [],
        'sel-line': 158,
        'sel-line-start': 4146,
        'selection_end': 4146,
        'selection_start': 4146},
                       loc('../../../../usr/lib64/python2.4/posixpath.py'): {''\
        'attrib-starts': [('split',
                           73)],
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 76,
        'sel-line-start': 2558,
        'selection_end': 2558,
        'selection_start': 2558},
                       loc('../../../../usr/lib64/python2.4/tarfile.py'): {''\
        'attrib-starts': [('TarFile',
                           777),
                          ('TarFile.gzopen',
                           977)],
        'first-line': 932,
        'folded-linenos': [],
        'sel-line': 963,
        'sel-line-start': 32736,
        'selection_end': 32736,
        'selection_start': 32736},
                       loc('../../../../usr/lib64/python2.4/urllib.py'): {'a'\
        'ttrib-starts': [('URLopener',
                          100),
                         ('URLopener.retrieve',
                          206)],
        'first-line': 193,
        'folded-linenos': [],
        'sel-line': 224,
        'sel-line-start': 8320,
        'selection_end': 8320,
        'selection_start': 8320},
                       loc('unknown:<untitled> #4'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #5'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #6'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0}}
proj.env-vars = {None: ('default',
                        ['']),
                 loc('MixDown'): ('project',
                                  ['']),
                 loc('MixDown.py'): ('project',
                                     [''])}
proj.initial-dir = {loc('MixDown'): ('custom',
                                     '/tmp/mixdown-rZ0aF1'),
                    loc('MixDown.py'): ('custom',
        '/home/white238/Projects/temp/')}
proj.pypath = {None: ('default',
                      '$(PYTHONPATH):/home/white238/Projects/MixDown/network'\
                      'x/networkx/'),
               loc('MixDown.py'): ('project',
                                   '$(PYTHONPATH):/home/white238/Projects/Mi'\
                                   'xDown/networkx/networkx:')}
search.replace-history = [u'.restartPath',
                          u'success',
                          u'.success',
                          u'variables',
                          u'logger.',
                          u'logger.Logger().',
                          u'mdDefines',
                          u'[1]',
                          u'md',
                          u'arget.outputPath',
                          u'determineOutputPath',
                          u'self.outputPath',
                          u'pythonCallInfo.outputPath',
                          u'pythonCallInfo.success',
                          u'pythonCallInfo.currentPath',
                          u'self.output',
                          u'printUsageAndExit()',
                          u'self.printUsageAndExit',
                          u'commandline',
                          u'self.tempDir']
search.search-history = [u'.origPath',
                         u'.or',
                         u'origPath',
                         u'.workingDirectory',
                         u'.workingD',
                         u'.startingPath',
                         u'path',
                         u'.buildSteps',
                         u'.buildStep',
                         u'.buildStep(',
                         u'.BuildStep(',
                         u'BuildStep(',
                         u'success',
                         u'success in',
                         u'succeeded',
                         u'.succeeded',
                         u'.success',
                         u'.suc',
                         u'.succ',
                         u'.su']
